Pour cet exo

npm audit pour voir toutes les failles!!!

1. Installer le necessaire pour redux: 

    - redux //contient que redux (aka le store)
    - react redux //ne contient pas redux, mais sert de pacerelle! (lien entre les deux)
    
    -> npm install redux react-redux prop-types axios 
    pnpm c'est une autre bibliothèque. un concurent d'npm. il faut voir et être au courant si on doit les utilser et etc!. 
    npx 

2. Preparer la structure du projet (customisable)
    Le choix de la structure est la suivante:
    - Le store
        > (dossier) actions         (Les différents intéractions)
        > (dossier) reducers        (Les méthode de interactions (des actions))
        store.js (fichier)          (Configuration pour créer le store)
//on va pas débuter par ce qu'on va mettre dans store.js. store à besoin du reducers et reduceurs a besoin des actions. 

3. Définition du store avec les premières intéractions
    a) La définition des actions possible
        - Les constantes
        - Les méthodes qui génère des objets "action" (zone bleu)
    b) La définition du resolver de ses actions (avec le reducers)
        - Le state initial
        - La méthode "reduceur" (zone verte dans l'image)
    c) La configuration du store.
        - On combine les reduceurs ensembles
        - On créer le store (qui sera exporté)

4. Diffusion du store dans l'application dans l'app (au niveau le plus haut possible.) =>via le 
    Dans le fichier "index.js" de React: 
        - Importer le store précédement créer.
        - On ajoute le composant "Provider" qui permet de difuser le store.

5.Créer des composants qui utilsent le store 
    (-1, +1) mais aussi de mettre en meme temps le +5 -5[]
    (Choix personnel) Les composants lier au store sont dans le dossier: 
        - container
        - pages (si le routing est présent)
    Les composant dans le dossier "components" ne sont pas connecté au store. 

    Pour qu'un composant puisse utiliser le store, il xest possible d'utiliser les hooks fournit par "React-Redux".
        - useSelector => Permet de recup les données du store
        - useDispatch => Permet d'envoyer des actions au dispatcher de redux

    Note: Il est possible d'utiliser "l'ancienne technique" via le HOC "Connect" composant du premier ordre. Principe de wrapper. 

